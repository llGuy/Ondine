#version 450

#include "Sky.glsl"

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout (set = 0, binding = 0) uniform PlanetUniform {
  PlanetProperties sky;
} uSky;

layout (set = 1, binding = 0) uniform sampler2D uTransmittanceTexture;

layout (set = 2, binding = 0, rgba16f) uniform image3D uDeltaRayleigh;
layout (set = 3, binding = 0, rgba16f) uniform image3D uDeltaMie;
layout (set = 4, binding = 0, rgba16f) uniform image3D uScattering;

layout (push_constant) uniform PushConstant {
  int layer;
  int scatteringOrder;
} uPushConstant;

void main() {
  ivec3 extent = ivec3(
    SCATTERING_TEXTURE_WIDTH,
    SCATTERING_TEXTURE_HEIGHT,
    SCATTERING_TEXTURE_DEPTH);

  // Equivalent to gl_FragCoord
  ivec3 pixelCoords = ivec3(gl_GlobalInvocationID.xyz);

  if (pixelCoords.x < extent.x && pixelCoords.y < extent.y && pixelCoords.z < extent.z) {
    vec4 outDeltaRayleigh, outDeltaMie;

    computeSingleScatteringTexture(
        uSky.sky, uTransmittanceTexture,
        vec3(pixelCoords) + vec3(0.5),
        outDeltaRayleigh.rgb, outDeltaMie.rgb);

    outDeltaRayleigh.a = 1.0;
    outDeltaMie.a = 1.0;

    vec4 outScattering = vec4(outDeltaRayleigh.rgb, outDeltaMie.r);

    imageStore(uDeltaRayleigh, pixelCoords, outDeltaRayleigh);
    imageStore(uDeltaMie, pixelCoords, outDeltaMie);
    imageStore(uScattering, pixelCoords, outScattering);
  }
}
